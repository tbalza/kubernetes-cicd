nodeSelector:
  role: ci-cd

serviceAccount: # not using credentials configured for Argo CD, instead retrieving secret via git write-back annotation
  create: false
  name: "argocd-image-updater"

# Pull secrets from External Secrets Operator
extraEnvFrom:
   - secretRef: # related to github credentials. pending. change name to image updater secrets
       name: argocd-secrets

#config:
#  logLevel: "trace" # default info # debug # trace
#  registries:
#    - api_url: https://350206045032.dkr.ecr.us-east-1.amazonaws.com # pending dynamic values
#      prefix: 350206045032.dkr.ecr.us-east-1.amazonaws.com
#      name: ECR
#      ping: true
#      insecure: false
#      default: true
#      credentials: ext:/scripts/ecr-login.sh
#      credsexpire: 6h
#      tagsortmode: none # ?

authScripts:
  enabled: true
#  scripts:
#    ecr-login.sh: |
#      #!/bin/sh
#
#      # Save the original HOME directory
#      #original_home=$HOME
#
#      # Set HOME to the /tmp directory for AWS CLI operations
#      export HOME=/tmp
#
#      # Retrieve the authorization token from AWS ECR
#      auth_token=$(aws ecr get-authorization-token --region us-east-1 --output text --query 'authorizationData[].authorizationToken')
#
#      # Decode the authorization token
#      decoded_token=$(echo $auth_token | base64 -d)
#
#      # Extract username and password
#      username=$(echo $decoded_token | cut -d: -f1)
#      password=$(echo $decoded_token | cut -d: -f2)
#
#      # Output username and password
#      echo "$username:$password"
#
#      # Restore the original HOME directory
#      #export HOME=$original_home