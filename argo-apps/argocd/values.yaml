controller:
  serviceAccount: # this serviceAccount would be used by `repocreds`, image updater is set in another values.yaml (inside image-updater)
    annotations:
      eks.amazonaws.com/role-arn: "arn:aws:iam::350206045032:role/ArgoCDRole"
  nodeSelector:
    role: ci-cd
# init containers or sidecars that configure or bootstrap the main containers based on dynamic inputs from secrets.
#  envFrom:
#   - configMapRef:
#       name: aws-account

crds:
  keep: false # check # Keep CRDs on chart uninstall

global:
  domain: argocd.tbalza.net # Used for ingresses, certificates, SSO, notifications, etc. (blank allows all domains) # check if it can be replaced by ingress
  image:
    tag: "v2.11.4" # Overrides the global Argo CD image tag whose default is the chart appVersion
#  nodeSelector:
#    role: ci-cd
  # use global node selector # pending

configs:
  cm:
    kustomize.buildOptions: "--load-restrictor LoadRestrictionsNone --enable-helm" # Enable Kustomize to install helm charts
  params:
    server.insecure: true # necessary when SSL termination is handled by ALB
  cmp: # aws-account-substitution plugin. needed since kustomize can't retrieve remote values (secrets/configmaps) for its own installation (only for resulting pods etc.)
    create: true
    plugins: # Plugin yaml files to be added to argocd-cmp-cm
      substitution: # name can't have hyphens
        init:
          command: ["/bin/sh"]
          args: ["-c", "echo 'Initializing AWS Account Substitution Plugin'"]
        generate:
          command: ["/bin/sh"]
          args: ["-c", "find . -type f -name '*.yaml' | grep 'PLACEHOLDER_ACCOUNT_ID' | xargs -I{} sed -i'' 's/PLACEHOLDER_ACCOUNT_ID/${ARGOCD_ENV_AWS_ACCOUNT_ID}/g' {}"] # argocd prepends ARGOCD_ENV_ to configmap key
        discover:
          #fileName: "./*.yaml"
          find:
            command: [ "/bin/sh", "-c", "find . -type f -name '*.yaml' | grep -l 'PLACEHOLDER_ACCOUNT_ID'" ]

        #secondpluginexample:
#           find:
#           glob: "**/Chart.yaml"
#           command: [sh, -c, find . -name env.yaml]

server:
#  envFrom:
#    - configMapRef:
#        name: aws-account
  ingress: # working helm ingress with externalDNS as per https://github.com/argoproj/argo-helm/tree/main/charts/argo-cd # no grpc warning errors
    enabled: false # true

applicationSet:
  enabled: true
  nodeSelector:
    role: ci-cd
#  extraEnvFrom:
#     - configMapRef:
#         name: aws-account

dex:
  enabled: false # This is for SSO
  server:
    nodeSelector:
      role: ci-cd

notifications:
  controller:
    nodeSelector:
      role: ci-cd

repoServer:
  nodeSelector:
    role: ci-cd
  envFrom: # set environment variable from configmap
    - configMapRef:
        name: aws-account # previously set as configmap in terraform (with key AWS_ACCOUNT_ID) which dynamically sets aws acct number, for argocd cmp to consume # pending. Use ESO, SSM parameter
   #all of this is default required installation params for cmp, only the plugin yaml name needs to be defined
  extraContainers:
    - name: cmp-my-plugin
      command:
        - "/var/run/argocd/argocd-cmp-server"
      image: busybox
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml  # Comment about the necessity of this mount
          subPath: substitution.yaml  # Maps the specific config file for this plugin
          name: argocd-cmp-cm
        - mountPath: /tmp
          name: cmp-tmp
  volumes:
    - name: argocd-cmp-cm
      configMap:
        name: argocd-cmp-cm
    - name: cmp-tmp
      emptyDir: { }

