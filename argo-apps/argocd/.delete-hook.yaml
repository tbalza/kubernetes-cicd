apiVersion: batch/v1
kind: Job
metadata:
  name: delete-hook
  annotations:
    "helm.sh/hook": "pre-delete"
spec:
  template:
    metadata:
      annotations:
        "eks.amazonaws.com/role-arn": "arn:aws:iam::350206045032:role/ArgoCDRole"  # Role with permissions to manage resources
    spec:
      serviceAccountName: argocd  # Assuming this account is linked to the necessary IAM role
      restartPolicy: Never
      containers:
      - name: cleanup
        image: bitnami/kubectl  # Using an image with kubectl and jq installed
        command: ["/bin/sh", "-c"]
        args:
          - |
            # First, delete all standard resources managed by Argo CD
            echo "Deleting standard resources managed by Argo CD..."
            kubectl delete all,cm,secrets,pvc --all-namespaces --selector=app.kubernetes.io/managed-by=argocd

            # Next, dynamically find and delete all CRDs managed by Argo CD
            echo "Finding and deleting CRDs managed by Argo CD..."
            kubectl get crd -o json | jq -r '.items[] | select(.metadata.annotations["app.kubernetes.io/managed-by"] == "argocd") | .metadata.name' | while read crd
            do
              kubectl delete $crd --all --wait=false
            done

            # Optionally, add commands to delete other resource types specifically managed by Argo CD
            echo "Processing other resources managed by Argo CD..."
            for resource in $(kubectl api-resources --verbs=list --namespaced -o name)
            do
              kubectl get $resource --all-namespaces -o json | jq -r '.items[] | select(.metadata.annotations["app.kubernetes.io/managed-by"] == "argocd") | .metadata.namespace + " " + .metadata.name' | while read ns name
              do
                kubectl delete $resource -n $ns $name
              done
            done