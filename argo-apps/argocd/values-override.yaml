serviceAccount:
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::350206045032:role/ArgoCDRole"

global:
  domain: "" # Used for ingresses, certificates, SSO, notifications, etc. (allow all domains)

server:
  service:
    type: ClusterIP
  containerPorts:
    server: 8282
  extraArgs:
    - --insecure
  extraEnv:
    - name: ARGOCD_INSECURE
      value: "true"
  ingress:
    enabled: true
    ingressClassName: "alb"
    annotations:
      kubernetes.io/ingress.class: "alb"
      alb.ingress.kubernetes.io/scheme: "internet-facing"
      alb.ingress.kubernetes.io/target-type: "ip"
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'  # Adjust as necessary for HTTPS
      alb.ingress.kubernetes.io/group.name: "argo-cd-cluster"
      alb.ingress.kubernetes.io/group.order: "1"
      alb.ingress.kubernetes.io/healthcheck-path: "/healthz"
      alb.ingress.kubernetes.io/healthcheck-port: "traffic-port" # check
      alb.ingress.kubernetes.io/success-codes: "200" # check
    path: "/*"
    pathType: "ImplementationSpecific"
    hostname: "" # references global: for domain

applicationSet:
  enabled: true
  nodeSelector:
    role: ci-cd

dex:
  server:
    nodeSelector:
      role: ci-cd

notifications:
  controller:
    nodeSelector:
      role: ci-cd

controller:
  nodeSelector:
    role: ci-cd

repoServer:
  nodeSelector:
    role: ci-cd

