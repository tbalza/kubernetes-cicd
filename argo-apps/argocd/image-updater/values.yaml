nodeSelector:
  role: ci-cd

serviceAccount: # not using credentials configured for Argo CD, instead retrieving secret via git write-back annotation
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::${AWS_ACCOUNT}:role/ImageUpdaterRole" # pending dynamic values

# Pull secrets from External Secrets Operator
extraEnvFrom:
   - secretRef:
       name: argocd-secrets

config:
  logLevel: "trace" # default info # debug # trace
  applicationsAPIKind: "kubernetes"
#  argocd:
#    # -- Use the gRPC-web protocol to connect to the Argo CD API
#    grpcWeb: true
#    # -- Connect to the Argo CD API server at server address
#    serverAddress: "argo-cd-argocd-server-grpc"
#    # -- If specified, the certificate of the Argo CD API server is not verified.
#    insecure: true #
#    # -- If specified, use an unencrypted HTTP connection to the Argo CD API instead of TLS.
#    plaintext: true
#    # -- If specified, the secret with Argo CD API key will be created.
#    token: ""
  registries:
    - api_url: https://${AWS_ECR_REPO} # pending dynamic values
      prefix: ${AWS_ECR_REPO}
      name: ECR
      ping: true
      insecure: false
      default: true
      credentials: ext:/scripts/ecr-login.sh
      credsexpire: 6h
      tagsortmode: none # ?

authScripts:
  enabled: true
  scripts:
    ecr-login.sh: |
      #!/bin/sh
      
      # Save the original HOME directory
      #original_home=$HOME
      
      # Set HOME to the /tmp directory for AWS CLI operations
      export HOME=/tmp
      
      # Retrieve the authorization token from AWS ECR
      auth_token=$(aws ecr get-authorization-token --region ${AWS_REGION} --output text --query 'authorizationData[].authorizationToken')
      
      # Decode the authorization token
      decoded_token=$(echo $auth_token | base64 -d)
      
      # Extract username and password
      username=$(echo $decoded_token | cut -d: -f1)
      password=$(echo $decoded_token | cut -d: -f2)
      
      # Output username and password
      echo "$username:$password"

      # Restore the original HOME directory
      #export HOME=$original_home