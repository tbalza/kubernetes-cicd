apiVersion: v1
items:
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      alb.ingress.kubernetes.io/backend-protocol: HTTP
      alb.ingress.kubernetes.io/conditions.argo-cd-argocd-server-grpc: |
        [{"field":"http-header","httpHeaderConfig":{"httpHeaderName": "Content-Type", "values":["application/grpc"]}}]
      alb.ingress.kubernetes.io/group.name: argo-cd-cluster
      alb.ingress.kubernetes.io/group.order: "1"
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/ssl-redirect: "443"
      alb.ingress.kubernetes.io/target-type: ip
      external-dns.alpha.kubernetes.io/hostname: argocd.tbalza.net
    creationTimestamp: "2024-06-07T22:15:27Z"
    finalizers:
    - group.ingress.k8s.aws/argo-cd-cluster
    generation: 1
    labels:
      argocd.argoproj.io/instance: argocd
    name: argo-cd-argocd-server
    namespace: argocd
    resourceVersion: "4919"
    uid: 0cdf96fd-e30c-4fbb-b9c3-0cc30e252b73
  spec:
    ingressClassName: alb
    rules:
    - host: argocd.tbalza.net
      http:
        paths:
        - backend:
            service:
              name: argo-cd-argocd-server-grpc
              port:
                number: 80
          path: /
          pathType: Prefix
        - backend:
            service:
              name: argo-cd-argocd-server
              port:
                number: 80
          path: /
          pathType: Prefix
  status:
    loadBalancer:
      ingress:
      - hostname: k8s-argocdcluster-5a9eface86-608447189.us-east-1.elb.amazonaws.com
kind: List
metadata:
  resourceVersion: ""