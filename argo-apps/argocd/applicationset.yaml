apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: cluster-addons
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - git:
        repoURL: https://github.com/tbalza/kubernetes-cicd.git # git@github.com:tbalza/kubernetes-cicd.git
        revision: HEAD # branch for git write back?
        directories:
          - path: argo-apps/* # argo-apps/*
  template:
    metadata:
      name: '{{.path.basename}}'
      annotations: # image list has `app name` prepended before an `=` (django) and the ecr repo. corresponding annotations are prepended with the same app name (django.xxx)#
        argocd-image-updater.argoproj.io/image-list: "django=350206045032.dkr.ecr.us-east-1.amazonaws.com/django-production"
        argocd-image-updater.argoproj.io/django.update-strategy: "newest-build" # digest # "newest-build" # sem ver
        argocd-image-updater.argoproj.io/django.kustomize.image-name: django-production-kustomize
        argocd-image-updater.argoproj.io/write-back-method: git:secret:argocd/argocd-secrets # secret:<namespace>/<secret> # <secret> refers to ExternalSecret name not they key. (must contain keys `username` `password`)
        argocd-image-updater.argoproj.io/write-back-target: kustomization
        argocd-image-updater.argoproj.io/git-branch: main # where the git writeback will be created
        # argocd-image-updater.argoproj.io/git-repository: https://github.com/tbalza/kubernetes-cicd.git
    spec:
      project: "default" # check
      source:
        repoURL: https://github.com/tbalza/kubernetes-cicd.git # git@github.com:tbalza/kubernetes-cicd.git # check
        targetRevision: HEAD # check
        path: '{{.path.path}}'
        plugin: # maybe disabling this allows for git writeback (instead of kustomization)? use discover instead?
          name: substitution
      destination:
        server: https://kubernetes.default.svc # pending make dynamic from repo files
        namespace: '{{.path.basename}}' # pending make dynamic from repo files
      ignoreDifferences: # argocd diff customization, meant for django, calculating structured merge diff: error building typed value from live resource: .status.lastPhaseTransitionTime: field not declared in schema
        - kind: PersistentVolume # (custom diffing) fixes syncing error: .status.lastPhaseTransitionTime: field not declared in schema # https://github.com/argoproj/argo-cd/issues/16640 (related to django PV)
          jsonPointers:
            - /spec/claimRef/resourceVersion
            - /spec/claimRef/uid
            - /status/lastPhaseTransitionTime
      syncPolicy:
        automated:
          selfHeal: true
          prune: true # (disable when testing cmp plugin) enables the deletion of resources that are no longer in source
        retry:
          limit: 50 # increase retries to prevent degraded state when cmp and image updater are being set up. pending fix
          backoff:
            duration: 15s
            factor: 2
            maxDuration: 10m
        syncOptions:
        - CreateNamespace=true
        - ServerSideApply=true
        - ServerSideDiff=true
        - RespectIgnoreDifferences=true # (custom diffing) fixes syncing error: .status.lastPhaseTransitionTime: field not declared in schema (related to django PV)