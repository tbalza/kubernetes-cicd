alertmanager:
  serviceAccount:
    create: true
    name: alertmanager
    annotations:
      eks.amazonaws.com/role-arn: "argocd:arn:aws:iam::350206045032:role/AlertmanagerRole" # check , make cluster and account id dynamic

kubeStateMetrics:
  enabled: true
  extraArgs:
    - --telemetry-port=8081
    - --port=8989 # Custom port to avoid conflicts with Jenkins
  serviceAccount:
    create: true
    name: kube-state-metrics
    annotations:
      eks.amazonaws.com/role-arn: "argocd:arn:aws:iam::350206045032:role/KubeStateMetricsRole" # check , make cluster and account id dynamic

nodeExporter:
  serviceAccount:
    create: true
    name: node-exporter
    annotations:
      eks.amazonaws.com/role-arn: "argocd:arn:aws:iam::350206045032:role/NodeExporterRole" # check , make cluster and account id dynamic

grafana:
  adminPassword: test123
  serviceAccount:
    create: true
    name: grafana
    annotations:
      eks.amazonaws.com/role-arn: "argocd:arn:aws:iam::350206045032:role/GrafanaRole" # check , make cluster and account id dynamic

prometheus:
  prometheusSpec:
    extraArgs:
      # Set the metrics bind address. by default kube proxy metrics are only accessible by localhost
      --web.listen-address=0.0.0.0:9090
      --web.telemetry-path=/metrics
    containers:
      - name: prometheus
        ports:
          - containerPort: 9090
            name: web
            protocol: TCP
    serviceMonitorSelector:
      matchLabels:
        prometheus: devops # custom label used by prometheus operator to link to select service monitor object (postgresql)
    serviceMonitorSelectorNilUsesHelmValues: false
  serviceAccount:
    create: true
    name: prometheus
    annotations:
      eks.amazonaws.com/role-arn: "argocd:arn:aws:iam::350206045032:role/PrometheusRole" # check , make cluster and account id dynamic

prometheusOperator:
  serviceAccount:
    create: true
    name: prometheus-operator
    annotations:
      eks.amazonaws.com/role-arn: "argocd:arn:aws:iam::350206045032:role/PrometheusOperatorRole" # check , make cluster and account id dynamic
  admissionWebhooks:
    enabled: true

# Control plane is managed by EKS hence the following are disabled
defaultRules:
  rules:
    etcd: false
    kubeScheduler: false
kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false

commonLabels:
  prometheus: devops # custom label so that prometheus operator doesn't ignore default service monitors created by this helm chart (empty targets)


