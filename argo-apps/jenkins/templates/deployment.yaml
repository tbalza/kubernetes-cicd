apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jenkins.fullname" . }}
  labels:
    {{- include "jenkins.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "jenkins.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "jenkins.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "jenkins.serviceAccountName" . }}
      securityContext:
        fsGroup: 1000
      containers:
        - name: jenkins
          image: "{{ .Values.master.image }}:{{ .Values.master.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: JAVA_OPTS
              value: "-Djenkins.install.runSetupWizard=false {{ .Values.controller.JCasC.env }}"
          ports:
            - name: http
              containerPort: {{ .Values.controller.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /login
              port: http
          readinessProbe:
            httpGet:
              path: /login
              port: http
          resources:
            {{- toYaml .Values.master.resources | nindent 12 }}
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: {{ include "jenkins.fullname" . }}-pvc
