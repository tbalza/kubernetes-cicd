apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: jenkins-secrets
  namespace: jenkins
#  annotations:
#    argocd.argoproj.io/sync-wave: "-2"
spec:
  refreshInterval: "0" # default 1h , should only be refreshed on deploy (?)
  secretStoreRef:
    name: jenkins-secrets # must match `SecretStore` name
    kind: SecretStore
  target:
    name: jenkins-secrets
    creationPolicy: Owner # Owner # Owner managed by ESO
    immutable: true # check
#    template:
#      metadata:
#        labels:
#          "jenkins.io/credentials-type": "secretText"
#        annotations:
#          "jenkins.io/credentials-description": "Jenkins Secrets" # https://external-secrets.io/v0.4.2/examples-jenkins-kubernetes-credentials/ or kubernetes-credentials-provider-plugin
  data:
    - secretKey: ECR_REPO # arbitrary assigned key name, used in Jenkinsfile/Pipeline
      remoteRef:
        key: ecr_repo  # The path to SSM parameter
        conversionStrategy: Default # argocd appset will loop infinitely if not set
        decodingStrategy: None # argocd appset will loop infinitely if not set
        metadataPolicy: None # argocd appset will loop infinitely if not set
    - secretKey: ECR_REPO_NAME # arbitrary assigned key name, used in Jenkinsfile/Pipeline
      remoteRef:
        key: ecr_repo_name  # The path to SSM parameter
        conversionStrategy: Default # argocd appset will loop infinitely if not set
        decodingStrategy: None # argocd appset will loop infinitely if not set
        metadataPolicy: None # argocd appset will loop infinitely if not set
    - secretKey: REGION # arbitrary assigned key name, used in Jenkinsfile/Pipeline
      remoteRef:
        key: ecr_region  # The path to SSM parameter
        conversionStrategy: Default # argocd appset will loop infinitely if not set
        decodingStrategy: None # argocd appset will loop infinitely if not set
        metadataPolicy: None # argocd appset will loop infinitely if not set
    - secretKey: REPO_URL # arbitrary assigned key name, used in Jenkinsfile/Pipeline
      remoteRef:
        key: repo_url  # The path to SSM parameter
        conversionStrategy: Default # argocd appset will loop infinitely if not set
        decodingStrategy: None # argocd appset will loop infinitely if not set
        metadataPolicy: None # argocd appset will loop infinitely if not set
    - secretKey: GITHUB_USER # arbitrary assigned key name, used in deployment/application/appset.yaml
      remoteRef:
        key: jenkins_github_app_token  # The path to SSM parameter
        conversionStrategy: Default # argocd appset will loop infinitely if not set
        decodingStrategy: None # argocd appset will loop infinitely if not set
        metadataPolicy: None # argocd appset will loop infinitely if not set
    - secretKey: GITHUB_TOKEN # arbitrary assigned key name, used in deployment/application/appset.yaml
      remoteRef:
        key: jenkins_github_app_user  # The path to SSM parameter
        conversionStrategy: Default # argocd appset will loop infinitely if not set
        decodingStrategy: None # argocd appset will loop infinitely if not set
        metadataPolicy: None # argocd appset will loop infinitely if not set
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: jenkins-secrets
  namespace: jenkins
#  annotations:
#    argocd.argoproj.io/sync-wave: "-1"
spec:
  provider:
    aws:
      service: ParameterStore
      region: us-east-1  # AWS region specific, pending dynamic value
      auth:
        jwt: # requires `sts:AssumeRoleWithWebIdentity` permission (set in tf)
          serviceAccountRef:
            name: jenkins # name of actual serviceAccount (not role)


