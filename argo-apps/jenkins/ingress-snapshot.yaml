apiVersion: v1
items:
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
        { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
      alb.ingress.kubernetes.io/group.name: argo-cd-cluster
      alb.ingress.kubernetes.io/group.order: "2"
      alb.ingress.kubernetes.io/healthcheck-path: /login
      alb.ingress.kubernetes.io/healthcheck-port: traffic-port
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: 200,307
      alb.ingress.kubernetes.io/target-type: ip
      external-dns.alpha.kubernetes.io/hostname: jenkins.tbalza.net
    creationTimestamp: "2024-06-07T23:35:49Z"
    finalizers:
    - group.ingress.k8s.aws/argo-cd-cluster
    generation: 1
    labels:
      argocd.argoproj.io/instance: jenkins
    name: jenkins
    namespace: jenkins
    resourceVersion: "25151"
    uid: b18d8d34-5784-4bc7-8f6e-18ddc16b8a30
  spec:
    ingressClassName: alb
    rules:
    - host: jenkins.tbalza.net
      http:
        paths:
        - backend:
            service:
              name: jenkins
              port:
                number: 8080
          path: /
          pathType: Prefix
  status:
    loadBalancer:
      ingress:
      - hostname: k8s-argocdcluster-5a9eface86-608447189.us-east-1.elb.amazonaws.com
kind: List
metadata:
  resourceVersion: ""