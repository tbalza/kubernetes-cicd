version: '3.8'
services:
  django:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app # this maps the entire django project directory to /app in the container
    depends_on:
      - postgres # system health?
    environment:
      - DB_HOST=${DB_HOST}  # This should point to the name of the service running PostgreSQL ("postgres")
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DATABASE_URL=postgres://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
  postgres:
    image: postgres:16.2 # match with RDS instance
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
  nginx:
    image: nginx:1.27.0
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./static:/static # maps your django static directory to nginx
    depends_on:
      - django

volumes: # named volumes
  postgres_data:
#  static_volume:

# Passing secrets in using a shared volume is a better solution the ENV, but they should be encrypted, via KMS
# https://testdriven.io/blog/docker-best-practices/